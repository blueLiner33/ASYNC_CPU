; Linked by DLX-LD.
; MemSize 12288
; Data size: 60
; Text size: 424
; Stack size: 8192
.text 0x0000
.data 0x0800
;;; Ethan L. Miller, 1999.  Released to the public domain
;;;
;;; Most of the traps are called in files from libtraps.
.text
.align 2
.proc ___init_LF0
	lhi	r29,0x0000
	addi	r29,r0,0x0FFC
	add	r30,r29,r0
	jal	_main
	nop
.endproc ___init_LF0


.align 2
.proc _exit
.global _exit
_exit:
	trap	0x300
	jr	r31
	nop
.endproc _exit

; for the benefit of gcc.

.align 2
.proc ___main
.global ___main
___main:
	jr	r31
	nop
.endproc ___main

; Trap Handler

.align 7
___trap_LF0:
	nop
	nop
	nop
	beqz	r0,___trap_LF0
	nop
	nop
	nop
; Compiled by GCC

.align 2
.proc _fib
.global _fib
_fib:
;  Function 'fib'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,16; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r3,(r30)
	seqi	r1,r3,0
	bnez	r1,L3_LF1
	nop; not filled.
	seqi	r1,r3,1
	beqz	r1,L5_LF1
	nop; not filled.
	j	L4_LF1
	nop; not filled.
L3_LF1:
	addi	r1,r0,-8
	j	L1_LF1
	nop; not filled.
L4_LF1:
	addi	r1,r0,5
	j	L1_LF1
	nop; not filled.
L5_LF1:
	addi	r29,r29,-8
	addi	r1,r3,-1
	sw	(r29),r1
	jal	_fib
	nop; not filled.
	add	r2,r0,r1
	addi	r1,r3,-2
	sw	(r29),r1
	jal	_fib
	nop; not filled.
	add	r1,r2,r1
	addi	r29,r29,8
L1_LF1:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _fib
.align 2
.proc _main
.global _main
_main:
;  Function 'main'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30; push fp
	add	r30,r0,r29; fp = sp
	sw	-8(r29),r31; push ret addr
	subui	r29,r29,8; alloc local storage
	jal	___main
	nop; not filled.
	addi	r3,r0,0
	lhi	r4,((_results_int)>>16)&0xffff
	addui	r4,r4,(_results_int)&0xffff
	lhi	r2,((_results_char)>>16)&0xffff
	addui	r2,r2,(_results_char)&0xffff
L12_LF1:
	addi	r29,r29,-8
	sw	(r29),r3
	jal	_fib
	nop; not filled.
	sh	(r2),r1
	lh	r1,(r2)
	sw	(r4),r1
	addi	r29,r29,8
	addi	r4,r4,4
	addi	r2,r2,2
	addi	r3,r3,1
	slei	r1,r3,9
	bnez	r1,L12_LF1
	nop; not filled.
	jal	_exit
	nop
.endproc _main
.data
.align 1
.global _results_char
_results_char:
.space 20
.align 2
.global _results_int
_results_int:
.space 40
.text
.global _etext
_etext:
.align 3
.data
.global _edata
_edata:
