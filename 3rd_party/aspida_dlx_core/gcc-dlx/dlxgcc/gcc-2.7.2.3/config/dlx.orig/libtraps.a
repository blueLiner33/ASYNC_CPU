!<arch>
bcopy.o/        823535569   26121 70    100600  3181      `
;
; Bcopy
;
; Aaron Sawdey 1996; released to the Public Domain.
;
.text
.proc _bcopy
.global _bcopy
_bcopy:
;  Function 'bcopy'; 0 bytes of locals, 5 regs to save.
	sw	-4(r29),r30	; push sp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#32	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	sw	16(r29),r6
	lw	r4,8(r30)
	lw	r5,(r30)
	snei	r1,r4,#0
	beqz	r1,LbcopyL1
		;; filled delay slot:
	lw	r3,4(r30)
	sltu	r1,r5,r3
	beqz	r1,LbcopyL3
		;; filled delay slot:
	add	r1,r5,r4
	addi	r1,r1,#-1
	sltu	r1,r1,r3
	beqz	r1,LbcopyL3
		;; filled delay slot:
	sub	r1,r3,r5
	andi	r1,r1,#0x3
	snei	r1,r1,#0
	bnez	r1,LbcopyL45
		;; filled delay slot:
	add	r1,r0,r4
	j	LbcopyL46
		;; filled delay slot:
	andi	r2,r5,#0x3
LbcopyL3:
	sltu	r1,r3,r5
	beqz	r1,LbcopyL9
		;; filled delay slot:
	sub	r1,r5,r3
	andi	r1,r1,#0x3
	snei	r1,r1,#0
	beqz	r1,LbcopyL7
		;; filled delay slot:
	andi	r2,r5,#0x3
LbcopyL5:
	add	r1,r0,r4
LbcopyL45:
	sgti	r1,r1,#0
	beqz	r1,LbcopyL1
		;; filled delay slot:
	addi	r4,r4,#-1
LbcopyL13:
	lb	r6,(r5)
	sb	(r3),r6
	addi	r5,r5,#1
	addi	r3,r3,#1
	add	r1,r0,r4
	sgti	r1,r1,#0
	bnez	r1,LbcopyL13
		;; filled delay slot:
	addi	r4,r4,#-1
	j	LbcopyL1
	nop	; not filled.
LbcopyL7:
LbcopyL46:
	addi	r1,r0,#4
	sub	r1,r1,r2
	j	LbcopyL43
		;; filled delay slot:
	andi	r2,r1,#0x3
LbcopyL20:
	add	r1,r0,r4
	sgti	r1,r1,#0
	beqz	r1,LbcopyL17
		;; filled delay slot:
	addi	r4,r4,#-1
	lb	r6,(r5)
	sb	(r3),r6
	addi	r5,r5,#1
	addi	r3,r3,#1
LbcopyL43:
	add	r1,r0,r2
	sgti	r1,r1,#0
	bnez	r1,LbcopyL20
		;; filled delay slot:
	addi	r2,r2,#-1
LbcopyL17:
	sgti	r1,r4,#3
	beqz	r1,LbcopyL22
		;; filled delay slot:
	add	r2,r0,r5
LbcopyL23:
	lw	r6,(r2)
	sw	(r3),r6
	addi	r2,r2,#4
	addi	r4,r4,#-4
	sgti	r1,r4,#3
	bnez	r1,LbcopyL23
		;; filled delay slot:
	addi	r3,r3,#4
LbcopyL22:
	j	LbcopyL5
		;; filled delay slot:
	add	r5,r0,r2
LbcopyL9:
	addi	r1,r4,#-1
	add	r3,r3,r1
	add	r5,r5,r1
	sub	r1,r3,r5
	andi	r1,r1,#0x3
	snei	r1,r1,#0
	beqz	r1,LbcopyL26
		;; filled delay slot:
	addi	r1,r5,#1
LbcopyL27:
	add	r1,r0,r4
LbcopyL47:
	sgti	r1,r1,#0
	beqz	r1,LbcopyL1
		;; filled delay slot:
	addi	r4,r4,#-1
LbcopyL30:
	lb	r6,(r5)
	sb	(r3),r6
	addi	r5,r5,#-1
	addi	r3,r3,#-1
	add	r1,r0,r4
	sgti	r1,r1,#0
	bnez	r1,LbcopyL30
		;; filled delay slot:
	addi	r4,r4,#-1
	j	LbcopyL1
	nop	; not filled.
LbcopyL26:
	j	LbcopyL44
		;; filled delay slot:
	andi	r2,r1,#0x3
LbcopyL37:
	add	r1,r0,r4
	sgti	r1,r1,#0
	beqz	r1,LbcopyL34
		;; filled delay slot:
	addi	r4,r4,#-1
	lb	r6,(r5)
	sb	(r3),r6
	addi	r5,r5,#-1
	addi	r3,r3,#-1
LbcopyL44:
	add	r1,r0,r2
	sgti	r1,r1,#0
	bnez	r1,LbcopyL37
		;; filled delay slot:
	addi	r2,r2,#-1
LbcopyL34:
	slei	r1,r4,#3
	bnez	r1,LbcopyL47
		;; filled delay slot:
	add	r1,r0,r4
	addi	r2,r5,#-3
	sgti	r1,r4,#3
	beqz	r1,LbcopyL40
		;; filled delay slot:
	addi	r3,r3,#-3
LbcopyL41:
	lw	r6,(r2)
	sw	(r3),r6
	addi	r2,r2,#-4
	addi	r4,r4,#-4
	sgti	r1,r4,#3
	bnez	r1,LbcopyL41
		;; filled delay slot:
	addi	r3,r3,#-4
LbcopyL40:
	addi	r5,r2,#3
	j	LbcopyL27
		;; filled delay slot:
	addi	r3,r3,#3
LbcopyL1:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r6,16(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	jr	r31
	lw	r30,-4(r30)
.endproc _bcopy

trap_close.o/   919641700   26121 70    100600  176       `
;
; Stub functions for DLX traps.
;
; Aaron Sawdey 1996; released to the Public Domain.
;
.text
.proc _close
.global _close
_close:		
	trap	#0x214
	jr	r31
	nop
.endproc _close
trap_open.o/    919641793   26121 70    100600  172       `
;
; Stub functions for DLX traps.
;
; Aaron Sawdey 1996; released to the Public Domain.
;
.text
.proc _open
.global _open
_open:		
	trap	#0x213
	jr	r31
	nop
.endproc _open
trap_read.o/    919641844   26121 70    100600  172       `
;
; Stub functions for DLX traps.
;
; Aaron Sawdey 1996; released to the Public Domain.
;
.text
.proc _read
.global _read
_read:		
	trap	#0x210
	jr	r31
	nop
.endproc _read
bzero.o/        823535593   26121 70    100600  1284      `
;
; Bzero
;
; Aaron Sawdey 1996; released to the Public Domain.
;
.text
.proc _bzero
.global _bzero
_bzero:
;  Function 'bzero'; 0 bytes of locals, 4 regs to save.
	sw	-4(r29),r30	; push sp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#24	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	lw	r3,4(r30)
	lw	r4,(r30)
	andi	r2,r4,#0x3
	addi	r1,r0,#4
	sub	r1,r1,r2
	j	LbcopyL76
		;; filled delay slot:
	andi	r2,r1,#0x3
LbcopyL67:
	add	r1,r0,r3
	sgti	r1,r1,#0
	beqz	r1,LbcopyL64
		;; filled delay slot:
	addi	r3,r3,#-1
	addi	r5,r0,(#0x0)&0xff
	sb	(r4),r5
	addi	r4,r4,#1
LbcopyL76:
	add	r1,r0,r2
	sgti	r1,r1,#0
	bnez	r1,LbcopyL67
		;; filled delay slot:
	addi	r2,r2,#-1
LbcopyL64:
	sgti	r1,r3,#3
	beqz	r1,LbcopyL69
		;; filled delay slot:
	add	r2,r0,r4
	addi	r5,r0,#0
LbcopyL78:
	sw	(r2),r5
	addi	r3,r3,#-4
	sgti	r1,r3,#3
	bnez	r1,LbcopyL78
		;; filled delay slot:
	addi	r2,r2,#4
LbcopyL69:
	j	LbcopyL77
		;; filled delay slot:
	add	r4,r0,r2
LbcopyL74:
	addi	r5,r0,(#0x0)&0xff
	sb	(r4),r5
	addi	r4,r4,#1
LbcopyL77:
	add	r1,r0,r3
	sgti	r1,r1,#0
	bnez	r1,LbcopyL74
		;; filled delay slot:
	addi	r3,r3,#-1
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	jr	r31
	lw	r30,-4(r30)
.endproc _bzero
trap_exit.o/    920058818   26121 70    100600  172       `
;
; Stub functions for DLX traps.
;
; Aaron Sawdey 1996; released to the Public Domain.
;
.text
.proc _exit
.global _exit
_exit:		
	trap	#0x300
	jr	r31
	nop
.endproc _exit
trap_printf.o/  919641803   26121 70    100600  180       `
;
; Stub functions for DLX traps.
;
; Aaron Sawdey 1996; released to the Public Domain.
;
.text
.proc _printf
.global _printf
_printf:		
	trap	#0x201
	jr	r31
	nop
.endproc _printf
trap_srandom.o/ 919641867   26121 70    100600  184       `
;
; Stub functions for DLX traps.
;
; Aaron Sawdey 1996; released to the Public Domain.
;
.text
.proc _srandom
.global _srandom
_srandom:		
	trap	#0x221
	jr	r31
	nop
.endproc _srandom
trap_random.o/  919641812   26121 70    100600  180       `
;
; Stub functions for DLX traps.
;
; Aaron Sawdey 1996; released to the Public Domain.
;
.text
.proc _random
.global _random
_random:		
	trap	#0x220
	jr	r31
	nop
.endproc _random
trap_write.o/   919641885   26121 70    100600  176       `
;
; Stub functions for DLX traps.
;
; Aaron Sawdey 1996; released to the Public Domain.
;
.text
.proc _write
.global _write
_write:		
	trap	#0x211
	jr	r31
	nop
.endproc _write
trap_lseek.o/   919641741   26121 70    100600  86        `
.text
.proc _lseek
.global _lseek
_lseek:		
	trap	#0x212
	jr	r31
	nop
.endproc _lseek
.SYMTAB/        920062947   26121 70    100600  248       `
11
bcopy.o
	D _bcopy
trap_close.o
	D _close
trap_open.o
	D _open
trap_read.o
	D _read
bzero.o
	D _bzero
trap_exit.o
	D _exit
trap_printf.o
	D _printf
trap_srandom.o
	D _srandom
trap_random.o
	D _random
trap_write.o
	D _write
trap_lseek.o
	D _lseek
